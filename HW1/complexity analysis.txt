In the homework 1, I made two kinds of insert method. The first is insert with bubble sort, which means when I insert a member, I do a bubble sort to keep the array ordered, then I can insert the next member. The second one is I insert all the members directly, then using the bubble sort function to sort the whole array to make the members ordered. So in the first method the running time is O(n^2) for every insertion, if I have total n members to insert, the running time is O(n^3) to get the sorted array. In the second method, the insertion takes total O(n) to insert n members, the bubble sort takes total O(n^2) to sort. So the total running time O(n^2 + n), which is O(n^2). So the second one is better.

For the remove function, the running time is O(n^2). Because in the function, we have to find the right target, then if we find it just delete it and move the following elements one unit ahead, there are total 2 nested for loops. If the target is not in the array, the  running time is O(n).